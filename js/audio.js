// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(["soundmanager"], function(SM) {
    var Audio;
    return Audio = (function() {

      function Audio(id, url) {
        this._playingHandler = __bind(this._playingHandler, this);
        this.sound = SM.createSound({
          id: id,
          url: url,
          autoLoad: true,
          whileplaying: this._playingHandler
        });
      }

      Audio.prototype.play = function() {
        return this.sound.play();
      };

      Audio.prototype.pause = function() {
        return this.sound.pause();
      };

      Audio.prototype.stop = function() {
        return this.sound.stop();
      };

      Audio.prototype.onLoad = function(fn) {
        if (this.sound.loaded) {
          return fn();
        } else {
          return this.sound.load({
            onload: fn
          });
        }
      };

      Audio.prototype.onPosition = function(pos, fn) {
        return this.sound.onPosition(pos, fn);
      };

      Audio.prototype.clearOnPosition = function(pos, fn) {
        return this.sound.clearOnPosition(pos, fn);
      };

      Audio.prototype.setPosition = function(pos) {
        return this.sound.setPosition(pos);
      };

      Audio.prototype.getDuration = function() {
        if (this.sound.loaded) {
          return this.sound.duration;
        } else {
          return this.sound.durationEstimate;
        }
      };

      Audio.prototype._playingHandler = function(e) {
        return console.log(e);
      };

      Audio.onReady = function(fn) {
        return SM.onready(fn);
      };

      return Audio;

    })();
  });

}).call(this);
